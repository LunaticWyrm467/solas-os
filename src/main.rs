//===================================================================================================================================================================================//
//
//  /$$$$$$$$             /$$                               /$$$$$$$           /$$             /$$    
// | $$_____/            | $$                              | $$__  $$         |__/            | $$    
// | $$       /$$$$$$$  /$$$$$$    /$$$$$$  /$$   /$$      | $$  \ $$ /$$$$$$  /$$ /$$$$$$$  /$$$$$$  
// | $$$$$   | $$__  $$|_  $$_/   /$$__  $$| $$  | $$      | $$$$$$$//$$__  $$| $$| $$__  $$|_  $$_/  
// | $$__/   | $$  \ $$  | $$    | $$  \__/| $$  | $$      | $$____/| $$  \ $$| $$| $$  \ $$  | $$    
// | $$      | $$  | $$  | $$ /$$| $$      | $$  | $$      | $$     | $$  | $$| $$| $$  | $$  | $$ /$$
// | $$$$$$$$| $$  | $$  |  $$$$/| $$      |  $$$$$$$      | $$     |  $$$$$$/| $$| $$  | $$  |  $$$$/
// |________/|__/  |__/   \___/  |__/       \____  $$      |__/      \______/ |__/|__/  |__/   \___/  
//                                          /$$  | $$                                                 
//                                         |  $$$$$$/                                                 
//                                          \______/
//
//===================================================================================================================================================================================//

//?
//? Created by LunaticWyrm467
//?

//!
//! Hello World!
//!

#![no_std]
#![no_main]
use core::panic::PanicInfo;


/*
 * Entry
 *      Point
 */


/// Entry Point
#[no_mangle]
pub extern "C" fn _start() -> ! {
    
    // Print out "Hello World!" using the VGA buffer.
    const HELLO: &[u8] = b"Hello World!";
    
    let vga_buffer: *mut u8 = 0xb8000 as *mut u8;

    for (i, &byte) in HELLO.iter().enumerate() {
        unsafe {
            *vga_buffer.offset(i as isize * 2)     = byte;
            *vga_buffer.offset(i as isize * 2 + 1) = 0xb;
        }
    }

    loop {}
}

/*
 * Panic
 *      Handler
 */


/// Panic Handler
#[panic_handler]
fn panic(_info: &PanicInfo) -> ! {
    loop {}
}
